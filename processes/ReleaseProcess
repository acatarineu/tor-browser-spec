#          Magical Tor Browser Release Process Incantations
#
#  "May this part of our job one day be replaced by a small shell script"
#

#. Tag any relevant component versions.
   # Depends on which components have been updated
   # If this is a firefox version update, you must rebase the patches, and
   # then:
   vim browser/config/version.txt config/milestone.txt
   git commit browser/config/version.txt config/milestone.txt -m "Bug 10895: Fix versioning for langpacks."
   # git tag and push..

#. Update changelog, updater relevant config and versions file in
#  tor-browser-bundle:
   cd gitian/tor-browser-bundle
   vim Bundle-Data/Docs/ChangeLog.txt
   vim tools/update-responses/config.yml
# No need to bother with old .xml and .htaccess files
   rm tools/update-resonses/htdocs/$TORBROWSER_UPDATE_CHANNEL/*
   cd gitian
   vim versions*
   git commmit ..
   git diff --color HEAD^1
   cd ../..

#. Tag a build tag in tor-browser-bundle.git
   TORBROWSER_VERSION=x.x.x
   git tag -s tbb-$TORBROWSER_VERSION-build1

#. Check that the build is correctly tagged
   eval $( ./get-tb-version release ) # or alpha / beta
   echo $TORBROWSER_VERSION
   echo $TORBROWSER_BUILDDIR
   echo
   echo 'You must still set $OLD_TORBROWSER_VERSION'

#. Push tag and version to tor-browser-bundle.git   
   torsocks git push origin master:master
   torsocks git push origin --tags

#. Build:
   make
   make sign
   make match

#. Place all build signatures in the correct location and fix permissions
   source versions
   for i in gk linus mikeperry boklm
   do
     if [ -d ${TORBROWSER_BUILDDIR}/$i ]; then
       if [ -f ${TORBROWSER_BUILDDIR}/${i}/sha256sums-unsigned-build.txt.asc ]; then
         cp ${TORBROWSER_BUILDDIR}/$i/sha256sums-unsigned-build.txt.asc ${TORBROWSER_BUILDDIR}/sha256sums-unsigned-build.txt-${i}.asc
       fi
       if [ -f ${TORBROWSER_BUILDDIR}/${i}/sha256sums-unsigned-build.incrementals.txt.asc ]; then
         cp ${TORBROWSER_BUILDDIR}/$i/sha256sums-unsigned-build.incrementals.txt.asc ${TORBROWSER_BUILDDIR}/sha256sums-unsigned-build.incrementals.txt-${i}.asc
       fi
       rm -rf ${TORBROWSER_BUILDDIR}/$i
     fi
   done
   chmod 755 $TORBROWSER_BUILDDIR
   chmod 644 $TORBROWSER_BUILDDIR/*

#. (Optional): Upload your binaries to people using partial rsync over old version
   torsocks ssh people.torproject.org "mv ~/public_html/builds/${TORBROWSER_VERSION}-build1 ~/public_html/builds/$TORBROWSER_BUILDDIR"
   torsocks rsync -avP $TORBROWSER_BUILDDIR/ people.torproject.org:public_html/builds/$TORBROWSER_BUILDDIR

#. Distribute build to tor-qa@lists.torproject.org
   #XXX: Currently manual
   # For stable releases put tails-dev@boum.org into Cc

#. Sign the MAR update files
   # First, copy the torbrowser tree to removable storage:
   rsync -avP $TORBROWSER_BUILDDIR/../../../ /media/storage/TBB/
   # Then, remove storage, attach to offline computer that houses TBB signing key.
   # Run the following from that rsync'ed removable storage dir:
   export NSS_DB_DIR=/path/to/nssdb
   # Only needed if you are not owner of the marsigner cert
   export NSS_CERTNAME=your_certname
   make signmars
   # Now, re-attach storage to the online computer, and sync the signed
   # results to a version-only directory (without the build number)
   torsocks ssh people.torproject.org "cp -a public_html/builds/$TORBROWSER_BUILDDIR public_html/builds/$TORBROWSER_VERSION"
   torsocks rsync -avP /media/storage/TBB/tor-browser-bundle/gitian/$TORBROWSER_BUILDDIR/*.mar people.torproject.org:public_html/builds/$TORBROWSER_VERSION

#. Sign individual bundle files:
   # XXX: Document

#. Clear out old builds, transfer builds to staticiforme
#. Remote:
   # We must use $TORBROWSER_VERSION here because signed result dirs should omit the build number suffix
   rsync -avP $TORBROWSER_VERSION staticiforme.torproject.org:/srv/dist-master.torproject.org/htdocs/torbrowser/
   ssh staticiforme.torproject.org "chmod g+w,o+r -R /srv/dist-master.torproject.org/htdocs/torbrowser/*"
   ssh staticiforme.torproject.org "static-update-component dist.torproject.org"
#. Local to staticiforme:
   cd ~/tbb-builds/tor-browser-bundle/gitian
   git pull origin
   eval $( ./get-tb-version release ) # or alpha / beta
   # We must use $TORBROWSER_VERSION here because signed result dirs should omit the build number suffix
   wget -nH --cut-dirs=2 -r -l 1 https://people.torproject.org/~gk/builds/$TORBROWSER_VERSION
   rm $TORBROWSER_VERSION/index.html*
   mv $TORBROWSER_VERSION /srv/dist-master.torproject.org/htdocs/torbrowser/
   chmod 775 /srv/dist-master.torproject.org/htdocs/torbrowser/$TORBROWSER_VERSION
   chmod 664 /srv/dist-master.torproject.org/htdocs/torbrowser/$TORBROWSER_VERSION/*
   # XXX: Need to manually get .htaccess :(
   chmod 664 /srv/dist-master.torproject.org/htdocs/torbrowser/$TORBROWSER_VERSION/.htaccess
   chown -R :torwww /srv/dist-master.torproject.org/htdocs/torbrowser/$TORBROWSER_VERSION
   # Verify everything was downloaded/copied correctly
   cd /srv/dist-master.torproject.org/htdocs/torbrowser/$TORBROWSER_VERSION
   for i in *.asc; do echo $i ; gpg -q $i || break; done
   static-update-component dist.torproject.org

#. Update website's torbrowser versions file in the website git
   cd webwml
   torsocks git pull origin
   # Update `version-win32-stable` as well if we include a new stable tor
   # version. See: #14152.
   # In the RecommendedTBBVersions file, only add the new version. Don't
   # remove the old one yet. That comes later.
   vim ./include/versions.wmi ./projects/torbrowser/RecommendedTBBVersions
   git commit include/versions.wmi projects/torbrowser/RecommendedTBBVersions -m "Add new TBB version"
   torsocks git push origin master:master
   cd ..

#. Create blog post from changelog
   # See https://blog.torproject.org/blog/tor-browser-352-released for now
   # Don't forget to link to Mozilla's security advisories if this is a security
   # update, or Nadim will yell at you.

#. Update and upload new update responses for the updater
   cd tor-browser-bundle/gitian
   # IMPORTANT: Copy the signed MAR files back before creating the update
   # responses!
   make update_responses # (or update_responses-alpha, update_responses-beta)
   cd ../tools/update-responses
   export TORBROWSER_UPDATE_CHANNEL=release # or alpha / beta
   chmod 664 htdocs/${TORBROWSER_UPDATE_CHANNEL}/*
   chmod 664 htdocs/${TORBROWSER_UPDATE_CHANNEL}/.htaccess
   chmod 775 htdocs/${TORBROWSER_UPDATE_CHANNEL}/
   torsocks ssh staticiforme.torproject.org "rm -rf /srv/dist-master.torproject.org/htdocs/torbrowser/update_2/${TORBROWSER_UPDATE_CHANNEL}/*"
   torsocks rsync -avP htdocs/$TORBROWSER_UPDATE_CHANNEL staticiforme.torproject.org:/srv/dist-master.torproject.org/htdocs/torbrowser/update_2/
   torsocks ssh staticiforme.torproject.org "chown -R :torwww /srv/dist-master.torproject.org/htdocs/torbrowser/update_2/${TORBROWSER_UPDATE_CHANNEL}/*"
   # Finally, remove old version as we point the update channel at the new version.
   # XXX: CAREFUL! $OLD_TOR_BROWSER_VERSION must be set!
   torsocks ssh staticiforme.torproject.org "rm -rf /srv/dist-master.torproject.org/htdocs/torbrowser/$OLD_TORBROWSER_VERSION"
   torsocks ssh staticiforme.torproject.org "static-update-component dist.torproject.org"

#. Update website's torbrowser versions file to remove old versions
#  NOTE: You probably want to wait some hours (12-24?) after pushing the
#  update responses before doing this, so that people have a chance to see
#  the Firefox notification first before their browser starts weirdly blinking
#  at them.
   cd webwml
   torsocks git pull origin
   # Now it's time to remove the obsolete version(s)
   vim ./projects/torbrowser/RecommendedTBBVersions
   git commit projects/torbrowser/RecommendedTBBVersions -m "Deprecate old TBB version"
   torsocks git push origin master:master
   cd ..

